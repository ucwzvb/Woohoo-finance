{"version":3,"sources":["StCard.tsx","index.tsx"],"names":["StCard","render","title","props","args","value","unit","showProgress","progressValue","deltaValue","deltaDescription","usePercentageDelta","theme","backgroundColor","themeBase","textColor","secondaryTextColor","borderColor","base","cardStyle","height","width","border","textStyle","color","titleStyle","deltaStyle","marginRight","Card","style","CardContent","Grid","container","justify","item","Typography","variant","end","duration","separator","decimals","LinearProgress","marginTop","borderRadius","Math","abs","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"uRAQMA,E,4MAEGC,OAAS,WAEd,IAAMC,EAAQ,EAAKC,MAAMC,KAAX,MACRC,EAAQ,EAAKF,MAAMC,KAAX,MACRE,EAAO,EAAKH,MAAMC,KAAX,KACPG,EAAe,EAAKJ,MAAMC,KAAX,cACfI,EAAgB,EAAKL,MAAMC,KAAX,eAChBK,EAAa,EAAKN,MAAMC,KAAX,MACbM,EAAmB,EAAKP,MAAMC,KAAX,kBACnBO,EAAqB,EAAKR,MAAMC,KAAX,qBACnBQ,EAAU,EAAKT,MAAfS,MAEJC,EAAkB,UAClBC,EAAY,QACZC,EAAY,QACZC,EAAqB,sBACrBC,EAAc,mBACdL,IACFE,EAAYF,EAAMM,KAClBL,EAAkBD,EAAMC,gBACxBE,EAAYH,EAAMG,UACF,UAAZD,IACFG,EAAcF,EACdC,EAAqB,UAIzB,IAAIG,EAAiC,CACnCC,OAAS,QACTC,MAAQ,QACRC,OAAS,6BACTL,YAAaA,EACbJ,gBAAiBA,GAEfU,EAAiC,CACnCC,MAAMT,GAOJU,EAAkC,CACpCD,MAAMR,GAEJU,EAAkC,CACpCC,YAAa,IACbH,MAAMR,GASR,OACE,6BACE,kBAACY,EAAA,EAAD,CAAMC,MAAOV,GACX,kBAACW,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,iBACtB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACC,EAAA,EAAD,CAAYN,MAAOJ,GAChBvB,GAEH,kBAACiC,EAAA,EAAD,CAAYN,MAAON,EAAWa,QAAQ,MACpC,kBAAC,IAAD,CACEP,MAAON,EACPc,IAAKhC,EACLiC,SAAU,GACVC,UAAU,IACVC,SAAUnC,EAAM,IAAI,EAAE,EAAE,IAEzBC,KAIJC,EACD,kBAACkC,EAAA,EAAD,CACIZ,MA1C2B,CACvCa,UAAW,MACXtB,OAAQ,MACRuB,aAAc,QAwCFtC,MAAOG,EACP4B,QAAQ,cACRZ,MAAOhB,EAAc,GAAG,UAAU,cAChC,KACLC,EACD,kBAAC0B,EAAA,EAAD,CAAYN,MAAOH,EAAaU,QAAQ,SACvC3B,EAAa,EACZ,0BAAMoB,MAnCuB,CACvCL,MAAO,cAkCgCf,EAAYE,EAAmB,IAAI,UAEhE,0BAAMkB,MAxCuB,CACvCL,MAAO,QAuCgCoB,KAAKC,IAAIpC,GAAaE,EAAmB,IAAI,UAE3E,IAAKD,GACW,S,YA9FVoC,KAsGNC,cAAwB/C,GC1GvCgD,IAAS/C,OACP,kBAAC,IAAMgD,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.9f842c2a.chunk.js","sourcesContent":["import {\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { ReactNode } from \"react\"\r\nimport { Card, CardContent, Grid, Typography, LinearProgress } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\n\r\nclass StCard extends StreamlitComponentBase {\r\n\r\n  public render = (): ReactNode => {\r\n\r\n    const title = this.props.args[\"title\"]\r\n    const value = this.props.args['value']\r\n    const unit = this.props.args['unit']\r\n    const showProgress = this.props.args['show_progress']\r\n    const progressValue = this.props.args['progress_value']\r\n    const deltaValue = this.props.args['delta']\r\n    const deltaDescription = this.props.args['delta_description']\r\n    const usePercentageDelta = this.props.args['use_percentage_delta']\r\n    const { theme } = this.props\r\n    \r\n    let backgroundColor = '#ffffff'\r\n    let themeBase = 'light'\r\n    let textColor = 'black'\r\n    let secondaryTextColor = 'rgba(0, 0, 0, 0.54)'\r\n    let borderColor = 'rgba(0,0,0,.125)'\r\n    if (theme){\r\n      themeBase = theme.base\r\n      backgroundColor = theme.backgroundColor\r\n      textColor = theme.textColor\r\n      if (themeBase!=='light'){\r\n        borderColor = textColor\r\n        secondaryTextColor = 'white'\r\n      }\r\n    }\r\n\r\n    let cardStyle: React.CSSProperties = {\r\n      height : '110px',\r\n      width : '220px',\r\n      border : '1px solid rgba(0,0,0,.125)',\r\n      borderColor: borderColor,\r\n      backgroundColor: backgroundColor\r\n    }\r\n    let textStyle: React.CSSProperties = {\r\n      color:textColor\r\n    }\r\n    let progressStyle: React.CSSProperties = {\r\n      marginTop: '3px',\r\n      height: '4px',\r\n      borderRadius: '10px',\r\n    }\r\n    let titleStyle: React.CSSProperties = {\r\n      color:secondaryTextColor\r\n    }\r\n    let deltaStyle: React.CSSProperties = {\r\n      marginRight: '1',\r\n      color:secondaryTextColor\r\n    }\r\n    let deltaNegative: React.CSSProperties = {\r\n      color: 'red'\r\n    }\r\n    let deltapositive: React.CSSProperties = {\r\n      color: 'limegreen'\r\n    }\r\n      \r\n    return (\r\n      <div>\r\n        <Card style={cardStyle}>\r\n          <CardContent>\r\n            <Grid container justify=\"space-between\">\r\n              <Grid item>\r\n                <Typography style={titleStyle}>\r\n                  {title}\r\n                </Typography>\r\n                <Typography style={textStyle} variant=\"h5\">\r\n                  <CountUp\r\n                    style={textStyle}\r\n                    end={value}\r\n                    duration={0.6}\r\n                    separator=\",\"\r\n                    decimals={value%1!==0?1:0}\r\n                  />\r\n                  {unit}\r\n                </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              {showProgress ? (\r\n              <LinearProgress\r\n                  style={progressStyle}\r\n                  value={progressValue}\r\n                  variant=\"determinate\"\r\n                  color={progressValue>50?'primary':'secondary'}\r\n              />) : null}\r\n              {deltaValue ? (\r\n              <Typography style={deltaStyle}  variant=\"body2\">\r\n              {deltaValue > 1 ? (\r\n                <span style={deltapositive}>{deltaValue}{usePercentageDelta?'%':'⬆'}</span>\r\n              ) : (\r\n                <span style={deltaNegative}>{Math.abs(deltaValue)}{usePercentageDelta?'%':'⬇'}</span>\r\n              )}\r\n              {' '}{deltaDescription}\r\n              </Typography>) : null}\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(StCard)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport StCard from \"./StCard\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StCard />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}